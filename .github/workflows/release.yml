name: Release Multi-Architecture Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build Multi-Architecture Binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Verify dependencies
        run: |
          echo "Checking for tiktoken WASM file..."
          if [ ! -f "node_modules/@dqbd/tiktoken/lite/tiktoken_bg.wasm" ]; then
            echo "ERROR: tiktoken WASM file not found!"
            echo "Listing node_modules/@dqbd/tiktoken contents:"
            ls -R node_modules/@dqbd/tiktoken/ || echo "tiktoken package not found"
            exit 1
          fi
          echo "âœ“ tiktoken WASM file found"

      - name: Build dashboard
        run: bun run build:dashboard

      - name: Build all architectures
        run: |
          cd apps/tui
          bun run build:multi

      - name: Verify binaries
        run: |
          ls -lh apps/tui/dist/
          echo "Binaries built successfully!"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## Multi-Architecture Binaries

            Download the appropriate binary for your platform:

            - **Linux x86_64**: `better-ccflare-linux-amd64`
            - **Linux ARM64** (Raspberry Pi 3/4/5, Oracle Cloud ARM, AWS Graviton): `better-ccflare-linux-arm64`
            - **macOS Intel**: `better-ccflare-macos-x86_64`
            - **macOS Apple Silicon**: `better-ccflare-macos-arm64`
            - **Windows x86_64**: `better-ccflare-windows-x64.exe`

            ### Installation

            ```bash
            # Linux x86_64
            wget https://github.com/tombii/better-ccflare/releases/download/${{ github.ref_name }}/better-ccflare-linux-amd64
            chmod +x better-ccflare-linux-amd64
            ./better-ccflare-linux-amd64

            # Linux ARM64
            wget https://github.com/tombii/better-ccflare/releases/download/${{ github.ref_name }}/better-ccflare-linux-arm64
            chmod +x better-ccflare-linux-arm64
            ./better-ccflare-linux-arm64
            ```

            Or install via npm: `npm install -g better-ccflare`

      - name: Upload Linux amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apps/tui/dist/better-ccflare-linux-amd64
          asset_name: better-ccflare-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apps/tui/dist/better-ccflare-linux-arm64
          asset_name: better-ccflare-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload macOS x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apps/tui/dist/better-ccflare-macos-x86_64
          asset_name: better-ccflare-macos-x86_64
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apps/tui/dist/better-ccflare-macos-arm64
          asset_name: better-ccflare-macos-arm64
          asset_content_type: application/octet-stream

      - name: Upload Windows x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apps/tui/dist/better-ccflare-windows-x64.exe
          asset_name: better-ccflare-windows-x64.exe
          asset_content_type: application/octet-stream
